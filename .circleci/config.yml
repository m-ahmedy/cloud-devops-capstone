version: 2.1

commands:
  update-kubeconfig:
    description: Update Kubernetes configuration with the cluster
    steps:
      - run:
          name: Update Kubernetes config
          command: |
            aws eks --region ${AWS_DEFAULT_REGION} update-kubeconfig --name ${CLUSTER_NAME}

orbs:
  kubernetes: circleci/kubernetes@0.12.0

jobs:
    pre-build:
        docker:
            - image: circleci/node:lts-stretch
        steps:
            - checkout
            - restore_cache:
                  keys: 
                    - frontend-deps-{{ checksum "package.json" }}
                    - frontend-deps-
            - run:
                name: Install dependencies
                command: |
                  make install
                  # Install hadolint
                  sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                  sudo chmod +x /bin/hadolint
            - run:
                name: Run lint checks
                command: |
                  make lint
            - run:
                name: Run unit tests
                command: |
                  make test

    build:
        docker:
            - image: circleci/python:3.7-stretch
        steps:
            - checkout
            - setup_remote_docker:
                version: 19.03.13
            - run:
                name: Build and push docker image
                command: |
                  docker build -t ${DOCKERHUB_USERNAME}/${IMAGE_NAME} .
                  echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin
                  docker push ${DOCKERHUB_USERNAME}/${IMAGE_NAME}
    deploy:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - kubernetes/install-kubectl
        - update-kubeconfig
        - run:
            name: Deploy Blue containers
            command: |
              kubectl apply -f .circleci/k8s/blue-controller.yaml
        - run:
            name: Deploy Green containers
            command: |
              kubectl apply -f .circleci/k8s/green-controller.yaml
        - run:
            name: Create the service, redirected to Blue containers
            command: |
              kubectl apply -f .circleci/k8s/blue-service.yaml

    deploy-green:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - kubernetes/install-kubectl
        - update-kubeconfig
        - run:
            name: Redirect the service to Green containers
            command: |
              kubectl apply -f .circleci/k8s/green-service.yaml

# Infrastructure jobs
    create-cluster:
      docker:
        - image: python:3.7-alpine
      steps:
        - checkout
        - run:
            name: Install dependencies
            command: |
              apk add --update tar gzip curl
              pip install awscli
        - run:
            name: Install eksctl
            command: |
              curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
              mv /tmp/eksctl /usr/local/bin
              eksctl version
        - run:
            name: Create EKS cluster
            command: |
              eksctl create cluster \
                --name ${CLUSTER_NAME} \
                --version 1.19 \
                --managed \
                --nodegroup-name standard-workers \
                --node-type t2.small \
                --nodes 2 \
                --nodes-min 1 \
                --nodes-max 3 \
                --region ${AWS_DEFAULT_REGION}
        - update-kubeconfig

workflows:
  infrasructure:
    jobs:
      - create-cluster:
          filters:
            branches:
              only: infrastructure

  default:
    jobs:
      - pre-build:
          filters:
            branches:
              ignore: infrastructure
      - build:
          requires:
            - pre-build
      - deploy:
          requires:
            - build
      - green-switch-approval:
          type: approval
          requires:
            - deploy
      - deploy-green:
          requires:
            - green-switch-approval